// .devcontainer/devcontainer.json
// Configuration for running with Docker-in-Docker
{
    // Name for the Dev Container configuration
    "name": "Containerlab + Ansible AVD Dev Environment",
    // Use a minimal Ubuntu base image provided by Microsoft for dev containers.
    "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
    // Features to add to the container.
    "features": {
        // Installs common utilities (git, curl, etc.), creates 'admin' user with sudo access.
        "ghcr.io/devcontainers/features/common-utils:2": {
            "username": "admin",
            "uid": "1000",
            "gid": "1000",
            "installZsh": "true", // Keep Zsh for better shell experience
            "installOhMyZsh": "true",
            "upgradePackages": "true"
        },
        // Installs Docker-in-Docker, required for Containerlab.
        "ghcr.io/devcontainers/features/docker-in-docker:2": {
            "version": "latest",
            "moby": true,
            "installDockerBuildx": true,
            "installDockerComposeSwitch": true
        },
        // Installs Python, pip, and virtual environment tools.
        "ghcr.io/devcontainers/features/python:1": {
            "version": "3.11", // Specify Python version (or use "latest")
            "installTools": true // Ensures pip, setuptools, wheel, venv are available
        }
    },
    // Run container in privileged mode - necessary for Docker-in-Docker and Containerlab.
    "runArgs": [
        "--privileged"
    ],
    // Set the default user for the container and VS Code terminal.
    "remoteUser": "admin",
    // Set environment variables specifically for VS Code and its processes.
    // Prepending the venv bin path to PATH helps VS Code extensions find tools.
    "remoteEnv": {
        "PATH": "/home/admin/ansible-venv/bin:${containerEnv:PATH}"
    },
    "hostRequirements": {
        "cpus": 4,
        "memory": "16gb",
        "storage": "32gb"
      },
    // Command to run after the container is created.
    // Executes the post-create setup script located in the same directory.
    "postCreateCommand": "bash .devcontainer/post-create.sh",

    // postAttachCommand removed - using tasks.json instead

    // VS Code specific settings
    "customizations": {
        "vscode": {
            // Extensions recommended for this environment
            "extensions": [
                "ms-azuretools.vscode-docker",         // Docker management
                "ms-vscode-remote.remote-containers",  // Core Dev Containers extension
                "ms-python.python",                    // Python support (intellisense, debugging)
                // "redhat.ansible",                   // Ansible support - Removed due to potential conflict with topology.yml formatting. Add back if needed.
                "srl-labs.vscode-containerlab"     // Containerlab extension
            ],
            // Settings to apply inside the container
            "settings": {
                "terminal.integrated.defaultProfile.linux": "zsh", // Use Zsh if installed
                "terminal.integrated.profiles.linux": {
                    "zsh": {
                        "path": "/usr/bin/zsh"
                    }
                },
                // Python extension settings (optional)
                "python.defaultInterpreterPath": "/home/admin/ansible-venv/bin/python", // Point to venv python
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": false, // Using ansible-lint/yamllint primarily
                "python.linting.flake8Enabled": false, // Using ansible-lint/yamllint primarily

                // Settings for Ansible extension (if it were installed)
                // "ansible.python.interpreterPath": "/home/admin/ansible-venv/bin/python",
                // "ansible.ansibleLint.path": "/home/admin/ansible-venv/bin/ansible-lint",
                // "ansible.path": "/home/admin/ansible-venv/bin/ansible"

                // Ensure generic YAML files are handled by the default YAML handler
                "[yaml]": {
                    "editor.defaultFormatter": "redhat.vscode-yaml" // Assuming redhat.vscode-yaml is installed or use another default YAML formatter
                },
                // Explicitly associate .clab.yml files with YAML if needed,
                // though usually not necessary if not overriding defaults elsewhere.
                // "files.associations": {
                //     "*.clab.yml": "yaml",
                //     "topology.yml": "yaml"
                // }
            }
        }
    },
    // Forward ports if needed (e.g., if Containerlab exposes specific services)
    // "forwardPorts": [],

    // Mount the workspace folder into the container
    "workspaceFolder": "/workspace",
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
}
